name: Deploy Bot to Server

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          timeout: 600s
          script: |
            cd discord_bot || { mkdir -p discord_bot && cd discord_bot; }
            
            # Update code
            [ ! -d ".git" ] && git clone https://github.com/NikitaVoitik/HS-Welcome-Bot . || git pull origin master
            
            # Install dependencies
            pip install -r requirements.txt
            
            # Simple process management using PID file approach
            echo "🛑 Managing bot process..."
            
            # Check if PID file exists and process is running
            if [ -f bot.pid ]; then
              old_pid=$(cat bot.pid)
              if kill -0 "$old_pid" 2>/dev/null; then
                echo "Stopping old bot process $old_pid"
                kill "$old_pid"
                sleep 3
                # Force kill if needed
                kill -0 "$old_pid" 2>/dev/null && kill -9 "$old_pid" 2>/dev/null || true
              fi
              rm -f bot.pid
            fi
            
            # Start new bot and save PID
            echo "🚀 Starting bot..."
            python bot.py > bot.log 2>&1 &
            echo $! > bot.pid
            
            sleep 3
            
            # Verify it's running
            if kill -0 $(cat bot.pid) 2>/dev/null; then
              echo "✅ Bot started successfully with PID $(cat bot.pid)"
            else
              echo "❌ Bot failed to start"
              tail -10 bot.log 2>/dev/null || echo "No log available"
              exit 1
            fi